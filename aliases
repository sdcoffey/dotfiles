alias cls="clear"

alias up="cd .."
alias up2="cd ../.."
alias up3="cd ../../.."
alias up4="cd ../../../.."
alias up5="cd ../../../../.."
alias up6="cd ../../../../../.."

alias g="git"
alias gt="git status"
alias gd="git diff"
alias gh="git hist -20"
alias gc="git commit -a"
alias gr="git reset"
alias gs="git status"
alias gl="git log"

alias v="vim"

alias k="kubectl"
alias tm="tmuxinator"

alias watch="watch "

alias bi="bundle install"
alias be="bundle exec"

alias flushdns="sudo killall -HUP mDNSResponder"

alias rc="type bundle > /dev/null && bundle exec rake_commit || rake_commit"
alias sourcerc="source ~/.zshrc"

alias textedit="open -a TextEdit"
alias openx="open . -a xcode"

alias pi="pod install"

case "$(uname)" in
    Linux) alias ls='ls -F --color=auto';;
    *) alias ls='ls -FG';;
esac
alias la='ls -a'
alias ll='ls -alh'

mkcd () {
  mkdir -p -- "$1" && cd -P -- "$1"
}

nb () {
  new_branch=$1
  base_branch=$2

  if [[ -z "$base_branch" ]]; then
    base_branch=$NB_BASE_BRANCH
  fi

  if [[ -z "$base_branch" ]]; then
    base_branch="main"
  fi


  if [[ -z "$new_branch" ]]; then
    echo "usage: nb <new-branch-name> <base-branch-name>"
  else
    git fetch origin $base_branch:$base_branch
    git checkout -b $new_branch $base_branch
  fi
}

clone() {
  git clone "git@github.com:$1.git"
}

kill_on_port() {
  lsof -i $1 | tail -n1 | awk '{print $2}' | xargs kill
}

alias print256colors='(x=`tput op` y=`printf %80s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)'
